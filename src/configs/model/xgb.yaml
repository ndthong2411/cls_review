# XGBoost configuration
name: xgb
generation: 3  # advanced

params:
  n_estimators: 100
  learning_rate: 0.1
  max_depth: 6
  subsample: 0.8
  colsample_bytree: 0.8
  min_child_weight: 1
  gamma: 0
  reg_alpha: 0
  reg_lambda: 1
  scale_pos_weight: 1  # Will be auto-calculated if imbalance.method=class_weight
  random_state: ${seed}
  n_jobs: -1
  tree_method: hist

# Early stopping
early_stopping:
  rounds: 50
  verbose: false

optuna:
  n_trials: 100
  timeout: 21600  # 6 hours
  params:
    learning_rate:
      type: loguniform
      low: 0.01
      high: 0.3
    max_depth:
      type: int
      low: 3
      high: 10
    n_estimators:
      type: int
      low: 100
      high: 1000
      step: 50
    subsample:
      type: uniform
      low: 0.5
      high: 1.0
    colsample_bytree:
      type: uniform
      low: 0.5
      high: 1.0
    min_child_weight:
      type: int
      low: 1
      high: 10
    gamma:
      type: loguniform
      low: 1e-8
      high: 1.0
    reg_alpha:
      type: loguniform
      low: 1e-8
      high: 1.0
    reg_lambda:
      type: loguniform
      low: 1e-8
      high: 10.0
